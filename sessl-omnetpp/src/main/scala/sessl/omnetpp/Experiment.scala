package sessl.omnetpp

import sessl.AbstractExperiment
import java.io.File
import java.io.FileWriter

/**
 * Integrates OMNeT++ 4.2 (http://www.omnetpp.org/) by producing <code>omnetpp.ini</code> files.
 * @author Roland Ewald
 */
class Experiment extends AbstractExperiment {

  /** The default file header. */
  val fileHeader = "#\n# This file was automatically generated by SESSL\n#\n\n\n[General]\n"

  /** The file to which the experiment configuration is written. */
  var expConfFileName = "omnetpp.ini"

  /** The working directory. */
  private[this] var workingDirectory: Option[File] = None

  /** The file writer for the experiment configuration. */
  private[this] var fileWriter: Option[FileWriter] = None

  /** Generates the corresponding omnetpp.ini file. */
  def basicConfiguration(): Unit = {
    initializeExperimentConfigFile()

    fileWriter.get.close
  }

  /** Initializes the experiment configuration file. */
  def initializeExperimentConfigFile(): Unit = {
    //Check model file
    val modelFile = new File(modelLocation.get)
    require(modelFile.exists && modelFile.isFile && modelFile.canExecute, "File '" + modelFile.getAbsolutePath + "' not found or not executable (permissions OK?).")

    //Initialize experiment configuration file
    workingDirectory = Some(modelFile.getParentFile)
    val expConfFile = new File(workingDirectory.get.getAbsolutePath + File.separator + expConfFileName)
    if (expConfFile.exists)
      require(expConfFile.delete, "Could not delete previous experiment configuration file: '" + expConfFile.getAbsolutePath + "'.")
    fileWriter = Some(new FileWriter(expConfFile, false))
    fileWriter.get.write(fileHeader)
  }

  /** Executes OMNeT++ experiment. */
  def executeExperiment(): Unit = {

  }

}